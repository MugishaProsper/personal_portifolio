{
  "info": {
    "name": "Portfolio API Tests",
    "description": "Comprehensive test suite for the Portfolio Backend API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"your_password\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "login"
              ]
            }
          },
          "test": [
            "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});",
            "pm.test(\"Response has token\", function () {\n    var jsonData = pm.response.json();\n    pm.expect(jsonData.token).to.exist;\n});",
            "pm.test(\"Response has user data\", function () {\n    var jsonData = pm.response.json();\n    pm.expect(jsonData.user).to.exist;\n    pm.expect(jsonData.user.email).to.exist;\n});"
          ]
        }
      ]
    },
    {
      "name": "Blogs",
      "item": [
        {
          "name": "Get All Blogs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/blog?page=1&limit=10&sort=createdAt&order=desc",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "blog"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "sort",
                  "value": "createdAt"
                },
                {
                  "key": "order",
                  "value": "desc"
                }
              ]
            }
          },
          "test": [
            "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});",
            "pm.test(\"Response has blogs array\", function () {\n    var jsonData = pm.response.json();\n    pm.expect(jsonData.blogs).to.be.an('array');\n});",
            "pm.test(\"Response has pagination info\", function () {\n    var jsonData = pm.response.json();\n    pm.expect(jsonData.pagination).to.exist;\n    pm.expect(jsonData.pagination.currentPage).to.exist;\n    pm.expect(jsonData.pagination.totalPages).to.exist;\n});"
          ]
        },
        {
          "name": "Create Blog",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Test Blog Post\",\n    \"content\": \"This is a test blog post content that is at least 50 characters long to meet the minimum requirement.\",\n    \"summary\": \"A test blog post summary\",\n    \"cover_image\": \"https://example.com/image.jpg\",\n    \"tags\": [\"test\", \"api\"],\n    \"category\": \"Technical\",\n    \"reading_time\": 5\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/blog",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "blog"
              ]
            }
          },
          "test": [
            "pm.test(\"Status code is 201\", function () {\n    pm.response.to.have.status(201);\n});",
            "pm.test(\"Response has blog data\", function () {\n    var jsonData = pm.response.json();\n    pm.expect(jsonData.blog).to.exist;\n    pm.expect(jsonData.blog.title).to.equal(\"Test Blog Post\");\n});"
          ]
        }
      ]
    },
    {
      "name": "Blog Reviews",
      "item": [
        {
          "name": "Get Blog Reviews",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/review/blog/{{blog_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "review",
                "blog",
                "{{blog_id}}"
              ]
            }
          },
          "test": [
            "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});",
            "pm.test(\"Response has reviews array\", function () {\n    var jsonData = pm.response.json();\n    pm.expect(jsonData.reviews).to.be.an('array');\n});"
          ]
        },
        {
          "name": "Add Blog Review",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"visitor@example.com\",\n    \"review\": \"This is a test review for the blog post. It should be at least 10 characters long.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/review/blog/{{blog_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "review",
                "blog",
                "{{blog_id}}"
              ]
            }
          },
          "test": [
            "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});",
            "pm.test(\"Response has success message\", function () {\n    var jsonData = pm.response.json();\n    pm.expect(jsonData.message).to.equal(\"Review added successfully\");\n});"
          ]
        },
        {
          "name": "Add Blog Review - Invalid Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"invalid-email\",\n    \"review\": \"This is a test review for the blog post.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/review/blog/{{blog_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "review",
                "blog",
                "{{blog_id}}"
              ]
            }
          },
          "test": [
            "pm.test(\"Status code is 400\", function () {\n    pm.response.to.have.status(400);\n});",
            "pm.test(\"Response has validation error\", function () {\n    var jsonData = pm.response.json();\n    pm.expect(jsonData.errors).to.exist;\n});"
          ]
        }
      ]
    },
    {
      "name": "Projects",
      "item": [
        {
          "name": "Get All Projects",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/project?page=1&limit=10",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "project"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "test": [
            "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});",
            "pm.test(\"Response has projects array\", function () {\n    var jsonData = pm.response.json();\n    pm.expect(jsonData.projects).to.be.an('array');\n});"
          ]
        }
      ]
    },
    {
      "name": "Project Reviews",
      "item": [
        {
          "name": "Get Project Reviews",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/review/project/{{project_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "review",
                "project",
                "{{project_id}}"
              ]
            }
          },
          "test": [
            "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});",
            "pm.test(\"Response has reviews array\", function () {\n    var jsonData = pm.response.json();\n    pm.expect(jsonData.reviews).to.be.an('array');\n});"
          ]
        },
        {
          "name": "Add Project Review",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"visitor@example.com\",\n    \"review\": \"This is a test review for the project. It should be at least 10 characters long.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/review/project/{{project_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "review",
                "project",
                "{{project_id}}"
              ]
            }
          },
          "test": [
            "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});",
            "pm.test(\"Response has success message\", function () {\n    var jsonData = pm.response.json();\n    pm.expect(jsonData.message).to.equal(\"Review added successfully\");\n});"
          ]
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5001"
    },
    {
      "key": "auth_token",
      "value": "your_auth_token_here"
    },
    {
      "key": "blog_id",
      "value": "your_blog_id_here"
    },
    {
      "key": "project_id",
      "value": "your_project_id_here"
    }
  ]
}